#!/bin/bash

# Custom system update function
system-update() {
  sudo apt-get update
  sudo apt-get upgrade -y
  sudo apt-get autoremove -y
  sudo apt-get autoclean
}

# pip-update
pip-upgrade() {
  python3 -m pip -q install --user --no-warn-script-location --break-system-packages --upgrade pip
  pip freeze - local \
    | grep -v "^\-e" \
    | cut -d = -f 1 \
    | xargs -n1 pip -q install --user --no-warn-script-location --break-system-packages --upgrade
}

# packing-box update command (development)
pbox-update() {
  wget -q --spider -T 1 http://www.google.com
  local ret=$? OPT=$HOME/.opt PBWS=$HOME/.packing-box
  __completion_update() {
    printf "${CYA}Regenerating Bash completions...${RST}\n"
    cp -f /mnt/share/src/files/utils/_pbox-compgen $OPT/utils/_pbox-compgen
    cp -f /mnt/share/src/files/utils/pbox-completions.json $OPT/utils/pbox-completions.json
    _pbox-compgen $OPT/utils/pbox-completions.json -f ~/.bash_completion
    source $HOME/.bashrc
  }
  __files_update() {
    printf "${CYA}Copying files from packing-box...${RST}\n"
    rm -rf $OPT/data/ && cp -rf /mnt/share/src/data $PBWS/
    cp -f /mnt/share/src/files/tools/* $OPT/tools/
    mv -f $OPT/tools/help $OPT/tools/?
    cp -f /mnt/share/src/conf/*.yml $PBWS/conf/
    for F in /mnt/share/src/term/*; do
      cp -f "$F" "$HOME/.${F##*/}"
    done
    source $HOME/.bashrc
    find /mnt/share/src/files/detectors/ -type f \( ! -iname \"*\.*\" \) -exec cp -f {} $OPT/bin/ \;
    mv -f $OPT/bin/userdb*.txt $OPT/detectors/
    rm -f $OPT/detectors/.userdb_txt.json ~/.local/lib/python3.11/site-packages/peid/db/.userdb_txt.json
  }
  __package_update() {
    if [ ! "$*" = "-n" ] && [ ! "$*" = "--no-internet" ] && [ $ret -eq 0 ]; then
      printf "${CYA}Upgrading pbox library...${RST}\n"
      pip -qq install --user --no-warn-script-location --break-system-packages --upgrade /mnt/share/src/lib/
    else
      printf "${CYA}Upgrading pbox library (ignore package index)...${RST}\n"
      pip -qq install --user --no-warn-script-location --break-system-packages --no-index --no-build-isolation --upgrade /mnt/share/src/lib/
    fi
  }
  if [ "$*" = "-h" ] || [ "$*" = "--help" ]; then
    echo "Usage: pbox-update [-n/--no-internet] [[-c/--completion-only]|[-p/--package-only]]"
  elif [ "$*" = "-c" ] || [ "$*" = "--completion-only" ]; then
    __completion_update
  elif [ "$*" = "-f" ] || [ "$*" = "--files-only" ]; then
    __files_update
  elif [ "$*" = "-p" ] || [ "$*" = "--package-only" ]; then
    __package_update
  else
    __files_update
    if [ ! "$*" = "-n" ] && [ ! "$*" = "--no-internet" ] && [ $ret -eq 0 ]; then
      printf "${CYA}Upgrading Pip...${RST}\n"
      pip -qq install --user --no-warn-script-location --break-system-packages --upgrade pip
    fi
    __package_update
    # fix for bad version of unicorn installed with angr
    UNICORN_LIB=$(find $HOME/.local/lib/python* -type d -name lib | grep unicorn)
    if [[ ! -z "$UNICORN_LIB" ]]; then
      rm -rf $UNICORN_LIB
      pip -qq uninstall -y --break-system-packages unicorn
      pip -qq install --user --no-warn-script-location --break-system-packages unicorn
    fi
    __completion_update
  fi
}
